Index: base/src/main/resources/application.properties
===================================================================
--- base/src/main/resources/application.properties	(revision 7f55ed50a34729ab09ab84ba554e166286a2dbf1)
+++ base/src/main/resources/application.properties	(revision 7f55ed50a34729ab09ab84ba554e166286a2dbf1)
@@ -1,1 +0,0 @@
-
Index: .idea/dataSources.xml
===================================================================
--- .idea/dataSources.xml	(revision 7f55ed50a34729ab09ab84ba554e166286a2dbf1)
+++ .idea/dataSources.xml	(revision 7f55ed50a34729ab09ab84ba554e166286a2dbf1)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
-    <data-source source="LOCAL" name="tobacco" uuid="b1f1e48b-7e8e-448a-b115-9b34f7c938d8">
-      <driver-ref>mysql.8</driver-ref>
-      <synchronize>true</synchronize>
-      <jdbc-driver>com.mysql.jdbc.Driver</jdbc-driver>
-      <jdbc-url>jdbc:mysql://139.224.192.190:3306/tobacco</jdbc-url>
-    </data-source>
-  </component>
-</project>
\ No newline at end of file
Index: base/src/main/java/com/xr/base/controller/TRiskGuardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- base/src/main/java/com/xr/base/controller/TRiskGuardController.java	(date 1592639987605)
+++ base/src/main/java/com/xr/base/controller/TRiskGuardController.java	(date 1592639987605)
@@ -0,0 +1,60 @@
+package com.xr.base.controller;
+
+
+import com.xr.base.entity.TRiskGuard;
+import com.xr.base.service.TRiskGuardService;
+import com.xr.base.util.ResponseResult;
+import org.apache.shiro.authz.annotation.RequiresPermissions;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.sql.Time;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.List;
+
+@RestController
+@RequestMapping("risk")
+public class TRiskGuardController {
+    @Autowired
+    private TRiskGuardService tRiskGuardService;
+
+    @RequestMapping("delete")
+    @RequiresPermissions("risk:delete")
+    public ResponseResult delete(Integer id){
+        tRiskGuardService.dele(id);
+        ResponseResult result = new ResponseResult();
+        result.getData().put("message","删除成功");
+        return result;
+    }
+
+    @RequestMapping("add")
+    @RequiresPermissions("risk:add")
+    public ResponseResult add(TRiskGuard tRiskGuard){
+        //获取系统当前时间
+        SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        Date time=null;
+        try {
+            time=sdf.parse(sdf.format(new Date()));
+        }catch (ParseException e){
+            e.printStackTrace();
+        }
+        tRiskGuard.setCreateTime((Time) time);
+        tRiskGuardService.add(tRiskGuard);
+        ResponseResult result = new ResponseResult();
+        result.getData().put("message","添加成功");
+        return result;
+    }
+
+    @PostMapping("list")
+    public ResponseResult list(){
+        List<TRiskGuard> list = tRiskGuardService.queryRisk();
+        ResponseResult result = new ResponseResult();
+        result.getData().put("items",list);
+        return result;
+    }
+
+}
Index: vue-element-admin-i18n/src/api/sys/risk.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- vue-element-admin-i18n/src/api/sys/risk.js	(date 1592638890620)
+++ vue-element-admin-i18n/src/api/sys/risk.js	(date 1592638890620)
@@ -0,0 +1,29 @@
+import request from '@/utils/request'
+import { date } from 'jszip/lib/defaults'
+
+// 添加用户
+export function add(data) {
+  return request({
+    url: 'risk/add',
+    method: 'post',
+    data
+  })
+}
+
+// 根据id删除用户
+export function deleteRisk(id) {
+  return request({
+    url: 'risk/delete',
+    method: 'get',
+    params: { id }
+  })
+}
+
+// 根据用户对象进行查询用户
+export function list(data) {
+  return request({
+    url: 'risk/list',
+    method: 'post',
+    data
+  })
+}
Index: base/src/main/java/com/xr/base/service/TRiskGuardService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- base/src/main/java/com/xr/base/service/TRiskGuardService.java	(date 1592638729665)
+++ base/src/main/java/com/xr/base/service/TRiskGuardService.java	(date 1592638729665)
@@ -0,0 +1,22 @@
+package com.xr.base.service;
+
+import com.xr.base.entity.TRiskGuard;
+
+import java.util.List;
+
+public interface TRiskGuardService {
+    /**
+     * 删除
+     */
+    void dele(int id);
+    /**
+     * 新增
+     */
+    void add(TRiskGuard tRiskGuard);
+
+    /**
+     * 查询所有风险
+     * @return
+     */
+    List<TRiskGuard> queryRisk();
+}
Index: base/src/main/java/com/xr/base/mapper/TRiskGuardMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- base/src/main/java/com/xr/base/mapper/TRiskGuardMapper.java	(date 1592653445172)
+++ base/src/main/java/com/xr/base/mapper/TRiskGuardMapper.java	(date 1592653445172)
@@ -0,0 +1,86 @@
+package com.xr.base.mapper;
+
+import com.xr.base.entity.SysEmp;
+import com.xr.base.entity.TRiskGuard;
+import org.apache.ibatis.annotations.*;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+
+
+@Repository
+@Mapper
+public interface TRiskGuardMapper {
+
+    /**
+     * 增加
+     */
+    @Insert("INSERT INTO t_rick_guard VALUES(NULL,#{riskId},#{year},#{dId},#{Pid},#{project},#{riskDescribe},#{riskL},#{riskC},#{riskD},#{riskGrade},#{riskGuard},#{createTime},#{createBy},#{createName},#{state})")
+    void add(TRiskGuard tRickGuard);
+    /**
+     * 删除
+     */
+    @Delete("delete from t_rick_guard where id = #{id}")
+    void dele(int id);
+    /**
+     * 查询单个
+     */
+    @Select("select * from t_rick_guard where id = #{id}")
+    SysEmp findOne(int id);
+
+    /**
+     * 查询所以风险
+     */
+    @Select("Select \n" +
+            "tr.id\n" +
+            ",tr.risk_id\n" +
+            ",tr.`year`\n" +
+            ",tr.d_id\n" +
+            ",tr.p_id\n" +
+            ",tr.project\n" +
+            ",tr.risk_describe\n" +
+            ",tr.riskL\n" +
+            ",tr.riskC\n" +
+            ",tr.riskD\n" +
+            ",tr.risk_grade\n" +
+            ",tr.risk_guard\n" +
+            ",tr.create_time\n" +
+            ",tr.create_by\n" +
+            ",tr.create_name\n" +
+            ",tr.state \n" +
+            ",d.dept_name as dName\n" +
+            ",r.`name` as mName\n" +
+            "from \n" +
+            "t_risk_guard tr\n" +
+            ",sys_dept d\n" +
+            ",sys_role r\n" +
+            ",t_risk_guard_dept trd\n" +
+            ",t_risk_guard_menu trm\n" +
+            " where \n" +
+            " tr.d_id = trd.dept_id \n" +
+            " and d.id = trd.d_id\n" +
+            " and tr.p_id = trm.menu_id\n" +
+            " and r.id = trm.p_id")
+    @Results({
+            @Result(column ="id",property = "id"),
+            @Result(column = "risk_id", property = "riskId"),
+            @Result(column = "year", property = "year"),
+            @Result(column = "d_id", property = "dId"),
+            @Result(column = "p_id", property = "pId"),
+            @Result(column = "project", property = "project"),
+            @Result(column = "risk_describe", property = "riskDescribe"),
+            @Result(column = "riskL", property = "riskL"),
+            @Result(column = "riskC", property = "riskC"),
+            @Result(column = "riskD", property = "riskD"),
+            @Result(column = "risk_grade", property = "riskGrade"),
+            @Result(column = "risk_guard", property = "riskGuard"),
+            @Result(column = "create_time", property = "createTime"),
+            @Result(column = "create_by", property = "createBy"),
+            @Result(column = "state", property = "state"),
+            @Result(column = "mName", property = "mName"),
+            @Result(column = "dName", property = "dName"),
+    })
+    List<TRiskGuard> RickAll();
+
+}
Index: base/src/main/java/com/xr/base/service/impl/TRiskGuardServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- base/src/main/java/com/xr/base/service/impl/TRiskGuardServiceImpl.java	(date 1592639550077)
+++ base/src/main/java/com/xr/base/service/impl/TRiskGuardServiceImpl.java	(date 1592639550077)
@@ -0,0 +1,35 @@
+package com.xr.base.service.impl;
+
+import com.xr.base.entity.TRiskGuard;
+import com.xr.base.mapper.TRiskGuardMapper;
+import com.xr.base.service.TRiskGuardService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+@Service
+public class TRiskGuardServiceImpl implements TRiskGuardService {
+
+    @Autowired
+    TRiskGuardMapper tRiskGuardMapper;
+
+
+    @Override
+    public void dele(int id) {
+        tRiskGuardMapper.dele(id);
+    }
+
+    @Override
+    public void add(TRiskGuard tRickGuard) {
+        tRiskGuardMapper.add(tRickGuard);
+    }
+
+    @Override
+    public List<TRiskGuard> queryRisk() {
+        System.out.println(tRiskGuardMapper.RickAll());
+        return tRiskGuardMapper.RickAll();
+    }
+
+
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n  <groupId>com.xr</groupId>\r\n  <artifactId>tobacco</artifactId>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <packaging>war</packaging>\r\n  <parent>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-parent</artifactId>\r\n    <version>1.5.21.RELEASE</version>\r\n    <relativePath/> <!-- lookup parent from repository -->\r\n  </parent>\r\n  <!--maven中的聚合，多个module聚合一个工程-->\r\n  <modules>\r\n    <module>base</module>\r\n  </modules>\r\n\r\n\r\n\r\n  <name>tobacco Maven Webapp</name>\r\n  <!-- FIXME change it to the project's website -->\r\n  <url>http://www.example.com</url>\r\n\r\n  <properties>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    <maven.compiler.source>1.8</maven.compiler.source>\r\n    <maven.compiler.target>1.8</maven.compiler.target>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>junit</groupId>\r\n      <artifactId>junit</artifactId>\r\n      <version>4.11</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n\r\n\r\n\r\n    <!-- 更新代码自动重启 -->\r\n    <dependency>\r\n      <groupId>org.springframework.boot</groupId>\r\n      <artifactId>spring-boot-devtools</artifactId>\r\n      <optional>true</optional>\r\n      <scope>runtime</scope>\r\n    </dependency>\r\n    <!--引入druid数据源-->\r\n    <dependency>\r\n      <groupId>com.alibaba</groupId>\r\n      <artifactId>druid</artifactId>\r\n      <version>1.1.8</version>\r\n    </dependency>\r\n    <!-- mybatis -->\r\n    <dependency>\r\n      <groupId>org.mybatis.spring.boot</groupId>\r\n      <artifactId>mybatis-spring-boot-starter</artifactId>\r\n      <version>2.0.1</version>\r\n    </dependency>\r\n\r\n\r\n    <!-- jdbc -->\r\n    <dependency>\r\n      <groupId>org.springframework.boot</groupId>\r\n      <artifactId>spring-boot-starter-jdbc</artifactId>\r\n    </dependency>\r\n    <!-- springmvc -->\r\n    <dependency>\r\n      <groupId>org.springframework.boot</groupId>\r\n      <artifactId>spring-boot-starter-web</artifactId>\r\n    </dependency>\r\n    <!-- mysql -->\r\n    <dependency>\r\n      <groupId>mysql</groupId>\r\n      <artifactId>mysql-connector-java</artifactId>\r\n      <version>5.1.24</version>\r\n    </dependency>\r\n    <!-- springboot test -->\r\n    <dependency>\r\n      <groupId>org.springframework.boot</groupId>\r\n      <artifactId>spring-boot-starter-test</artifactId>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <!-- 实体类简化 -->\r\n    <dependency>\r\n      <groupId>org.projectlombok</groupId>\r\n      <artifactId>lombok</artifactId>\r\n    </dependency>\r\n    <!-- fastjson -->\r\n    <dependency>\r\n      <groupId>com.alibaba</groupId>\r\n      <artifactId>fastjson</artifactId>\r\n      <version>1.2.58</version>\r\n    </dependency>\r\n\r\n    <!-- shiro -->\r\n    <dependency>\r\n      <groupId>org.apache.shiro</groupId>\r\n      <artifactId>shiro-core</artifactId>\r\n      <version>1.3.2</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.shiro</groupId>\r\n      <artifactId>shiro-spring</artifactId>\r\n      <version>1.3.2</version>\r\n    </dependency>\r\n\r\n  </dependencies>\r\n\r\n  <build>\r\n    <finalName>tobacco</finalName>\r\n    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->\r\n      <plugins>\r\n        <plugin>\r\n          <artifactId>maven-clean-plugin</artifactId>\r\n          <version>3.1.0</version>\r\n        </plugin>\r\n        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->\r\n        <plugin>\r\n          <artifactId>maven-resources-plugin</artifactId>\r\n          <version>3.0.2</version>\r\n        </plugin>\r\n        <plugin>\r\n          <artifactId>maven-compiler-plugin</artifactId>\r\n          <version>3.8.0</version>\r\n        </plugin>\r\n        <plugin>\r\n          <artifactId>maven-surefire-plugin</artifactId>\r\n          <version>2.22.1</version>\r\n        </plugin>\r\n        <plugin>\r\n          <artifactId>maven-war-plugin</artifactId>\r\n          <version>3.2.2</version>\r\n        </plugin>\r\n        <plugin>\r\n          <artifactId>maven-install-plugin</artifactId>\r\n          <version>2.5.2</version>\r\n        </plugin>\r\n        <plugin>\r\n          <artifactId>maven-deploy-plugin</artifactId>\r\n          <version>2.8.2</version>\r\n        </plugin>\r\n\r\n\r\n        <plugin>\r\n          <!-- The plugin rewrites your manifest -->\r\n          <groupId>org.springframework.boot</groupId>\r\n          <artifactId>spring-boot-maven-plugin</artifactId>\r\n          <version>1.5.21.RELEASE</version>\r\n          <configuration><!-- 指定该Main Class为全局的唯一入口 -->\r\n            <mainClass>com.xr.bosdemo.base.BaseApplication</mainClass>\r\n            <layout>ZIP</layout>\r\n          </configuration>\r\n          <executions>\r\n            <execution>\r\n              <goals>\r\n                <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->\r\n              </goals>\r\n              <!--可以生成不含依赖包的不可执行Jar包-->\r\n              <!-- configuration>\r\n                <classifier>exec</classifier>\r\n              </configuration> -->\r\n            </execution>\r\n          </executions>\r\n        </plugin>\r\n      </plugins>\r\n    </pluginManagement>\r\n  </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision 7f55ed50a34729ab09ab84ba554e166286a2dbf1)
+++ pom.xml	(date 1592638041978)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
 
   <groupId>com.xr</groupId>
